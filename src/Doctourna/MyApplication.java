package Doctourna;


import Interface.InterfaceAjoutArticle;
import Interface.Menu;
import Interface.MesArticle;
import Interface.ModArticle;
import Services.ServiceArticle;
import Services.Sms;
import static com.codename1.ui.CN.*;
import com.codename1.ui.Display;
import com.codename1.ui.Form;
import com.codename1.ui.Dialog;
import com.codename1.ui.Label;
import com.codename1.ui.plaf.UIManager;
import com.codename1.ui.util.Resources;
import com.codename1.io.Log;
import com.codename1.ui.Toolbar;
import java.io.IOException;
import com.codename1.ui.layouts.BoxLayout;
import com.codename1.io.NetworkEvent;
import com.codename1.ui.Button;
import com.codename1.ui.ComboBox;
import com.codename1.ui.Container;
import com.codename1.ui.EncodedImage;
import com.codename1.ui.FontImage;
import com.codename1.ui.Image;
import com.codename1.ui.TextArea;
import com.codename1.ui.TextField;
import com.codename1.ui.layouts.BorderLayout;
import com.codename1.ui.util.UIBuilder;
import entity.Article;

/**
 * This file was generated by <a href="https://www.codenameone.com/">Codename One</a> for the purpose 
 * of building native mobile applications using Java.
 */
public class MyApplication {

    EncodedImage enc;
    private Form current,fPost;
    private Resources theme;

    public void init(Object context) {
        // use two network threads instead of one
        updateNetworkThreadCount(2);

        theme = UIManager.initFirstTheme("/theme");

        // Enable Toolbar on all Forms by default
        Toolbar.setGlobalToolbar(true);

        // Pro only feature
        Log.bindCrashProtection(true);

        addNetworkErrorListener(err -> {
            // prevent the event from propagating
            err.consume();
            if(err.getError() != null) {
                Log.e(err.getError());
            }
            Log.sendLogAsync();
            Dialog.show("Connection Error", "There was a networking error in the connection to " + err.getConnectionRequest().getUrl(), "OK", null);
        });        
    }
    
    public void start() {
        if(current != null){
            current.show();
            return;
        }
        
        
        
//        enc = EncodedImage.create("file:///C:/Users/Lenovo/Documents/NetBeansProjects/DoctournaApp/src/Images/dislike.png");
  
//        InterfaceAjoutArticle aj = new InterfaceAjoutArticle();
//        aj.InterfaceAjoutArticle().show();
//         
//           Interface.ModArticle mod= new Interface.ModArticle();
//           mod.ModArticle().show();
           
           Interface.MesArticle mod = new Interface.MesArticle();
           mod.MesArticle(new Article(1)).show();
//             Interface.MesArticle ma=new Interface.MesArticle();
//        ma.MesArticle().show();
//         
//           
        
//           Menu menu= new Menu();
//           menu.Menu();
           
//        
        
        
        
        
    }

    public void stop() {
        current = getCurrentForm();
        if(current instanceof Dialog) {
            ((Dialog)current).dispose();
            current = getCurrentForm();
        }
    }
    
    public void destroy() {
    }

}
